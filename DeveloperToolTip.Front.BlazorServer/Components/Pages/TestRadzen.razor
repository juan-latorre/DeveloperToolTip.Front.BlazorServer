@page "/test-radzen"
<h3>TestRadzen</h3>

@inject ThemeService ThemeService
@implements IDisposable

<RadzenStack class="rz-p-0 rz-p-md-6 rz-p-lg-12">
    <RadzenCard Variant="Variant.Outlined">
        <RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap">
            <!-- Theme Selection -->
            <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem" class="rz-p-sm-2">
                <RadzenLabel Text="Change the current theme" />
                <RadzenDropDown Name="ThemeDropDown"
                                TValue="string"
                                Value="@ThemeService.Theme"
                                ValueChanged="@ChangeTheme"
                                Data="@Themes.All"
                                TextProperty=@nameof(Theme.Text)
                                ValueProperty=@nameof(Theme.Value) />
            </RadzenStack>

            <!-- Right-to-Left Switch -->
            <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem" class="rz-p-sm-2">
                <RadzenLabel Text="Right-to-left" />
                <RadzenSwitch Value="@(ThemeService.RightToLeft ?? false)"
                              ValueChanged="@ChangeRightToLeft" />
            </RadzenStack>

            <!-- WCAG Compliance Switch -->
            <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem" class="rz-p-sm-2">
                <RadzenLabel Text="WCAG compliant colors" />
                <RadzenSwitch Value="@(ThemeService.Wcag ?? false)"
                              ValueChanged="@ChangeWcag"
                              Name="WCAG" />
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
</RadzenStack>

@code {
    void ChangeTheme(string value)
    {
        ThemeService.SetTheme(value);
    }

    void ChangeRightToLeft(bool value)
    {
        ThemeService.SetRightToLeft(value);
    }

    void ChangeWcag(bool value)
    {
        ThemeService.SetWcag(value);
    }

    protected override void OnInitialized()
    {
        ThemeService.ThemeChanged += OnThemeChanged;
    }

    void OnThemeChanged()
    {
        Console.WriteLine($"Theme changed to {ThemeService.Theme}");
    }

    public void Dispose()
    {
        // Libera recursos o suscripciones.
        ThemeService.ThemeChanged -= OnThemeChanged;
    }
}
