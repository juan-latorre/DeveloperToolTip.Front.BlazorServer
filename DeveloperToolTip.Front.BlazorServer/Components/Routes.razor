@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@if (isLoading)
{
    <!-- Pantalla de carga mientras se valida la autenticación -->
    <div class="loading-container d-flex align-items-center justify-content-center" style="height: 100vh;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            @if (routeData.PageType == typeof(Login))
            {
                <RouteView RouteData="routeData" DefaultLayout="null" />
            }
            else
            {
                <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)" />
            }
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
}

@code {
    private bool isLoading = true; // Variable para controlar si se muestra la pantalla de carga

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Validar si el usuario tiene un token válido en el LocalStorage
            var authToken = await LocalStorage.GetItemAsync<string>("authToken");

            if (string.IsNullOrEmpty(authToken) && NavigationManager.Uri != NavigationManager.BaseUri)
            {
                // Redirigir al login si no hay token
                NavigationManager.NavigateTo("/", true);
            }

            // Marcar la validación como completa y renderizar el contenido
            isLoading = false;
            StateHasChanged();
        }
    }
}
