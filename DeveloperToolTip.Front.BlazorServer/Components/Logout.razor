@page "/logout"

@using DeveloperToolTip.Front.BlazorServer.Services

@inject IAuthService _IAuthService
@* @inject NavigationManager NavigationManager *@
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h3>Logging out...</h3>

@code {
    protected override async Task OnInitializedAsync()
    {

        // Obtener el token del LocalStorage
        var authToken = await LocalStorage.GetItemAsync<string>("authToken");

        if (!string.IsNullOrEmpty(authToken))
        {
            try
            {
                // Ejecutar el método Logout del servicio
                await _IAuthService.LogoutAsync(authToken);

                // Eliminar el token del LocalStorage
                await LocalStorage.RemoveItemAsync("authToken");

                // Redirigir al componente de Login
                navManager.NavigateTo("/", true);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error during logout: {ex.Message}");
                // Opcionalmente, manejar errores de logout
            }
        }
        else
        {
            // Redirigir al Login si no hay un token almacenado
            navManager.NavigateTo("/", true);
        }


        // Eliminar el token de autenticación almacenado
        //await LocalStorage.RemoveItemAsync("authToken");

        // Redirigir al componente de Login
        //navManager.NavigateTo("/", true);
    }
}
