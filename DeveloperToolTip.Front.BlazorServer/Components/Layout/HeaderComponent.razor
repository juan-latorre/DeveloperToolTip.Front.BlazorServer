@using DeveloperToolTip.Front.BlazorServer.Services
@inject IAuthService _AuthService
@inject IDeveloperService _DeveloperService
@inject IRoleService _RoleService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="container-fluid p-0">
    <nav class="navbar navbar-expand-lg barra-superior-govco d-flex justify-content-between align-items-center" aria-label="Barra superior" style="background-color: #0033A0;">
        <!-- Logo de GOV.CO -->
        <a href="https://www.gov.co/" target="_blank" aria-label="Portal del Estado Colombiano - GOV.CO" class="d-flex align-items-center text-white text-decoration-none">
            <span class="logo-header-govco me-2" style="background-image: url('/path-to-logo.png'); width: 40px; height: 40px; background-size: cover;"></span>
            <strong>GOV.CO</strong>
        </a>

        <!-- Información del Developer -->
        <div class="developer-info d-flex align-items-center text-white">
            <div class="developer-icon rounded-circle bg-light d-flex align-items-center justify-content-center me-2" style="width: 40px; height: 40px;">
                <i class="fas fa-user text-primary"></i>
            </div>
            <div class="developer-details text-end">
                <h6 class="mb-0">@($"{_developer?.FirstName} {_developer?.LastName}" ?? "Nombre no disponible")</h6>
                <small>Role : @(_role?.RoleName ?? "---")</small>
            </div>
        </div>
    </nav>
    <!-- Menu de Navegacion -->
    <div class="container-navbar-menu-govco blue-menu-govco">    
        <nav class="navbar navbar-expand-lg navbar-menu-govco " role="navigation" aria-label="Menú ejemplo entidad">            
            <div class="container-fluid container-second-navbar-menu-govco">

                <!-- Botón del menú responsivo -->
                <a class="navbar-brand navbar-toggler icon-entidad-menu-govco" href="Home"></a>               

                <button class="navbar-toggler button-responsive-menu-govco collapsed"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="#navbarScroll"
                aria-controls="navbarScroll"
                aria-expanded="false"
                aria-label="Toggle navigation">
                    <span class="icon-bars-menu-govco"></span>
                </button>               


                <div class="collapse navbar-collapse navbar-collapse-menu-govco" id="navbarScroll">

                    <div class="navbar-toggler">
                        <a class="icon-user-alt-menu-govco" href="home"></a>
                    </div>
                    <ul class="navbar-nav navbar-nav-menu-govco ms-auto">
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="home">
                                <span class="text-item-menu-govco">
                                    Home
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="classifiers/ClassifierDashBoard">
                                <span class="text-item-menu-govco">
                                    Classifier DashBoard
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="classifiers/TopicCategory">
                                <span class="text-item-menu-govco">
                                    Topic Category
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="classifiers/DeveloperRole">
                                <span class="text-item-menu-govco">
                                    IT Roles
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="OpenAIChat">
                                <span class="text-item-menu-govco">
                                    AI Chat Query 
                                </span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link dir-menu-govco" aria-current="page" href="Logout">
                                <span class="text-item-menu-govco">
                                    Sign out
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </div>
    <!-- Menu de Navegacion -->
</div>

<script>       
    window.addEventListener("load", function () {
    initHeader();

    });

    function initHeader() {
    initTopBar();
    initMenu();
    }     
</script>

@code {
    private int? DeveloperId;
    private DeveloperDto _developer = new DeveloperDto();
    private RoleDto _role = new RoleDto();
    private bool _dataLoaded = false;

    //protected override async Task OnInitializedAsync()
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_dataLoaded)
        {
            try
            {
                var activeSession = await _AuthService.GetActiveSession();
                if (activeSession?.DeveloperId != null)
                {
                    DeveloperId = activeSession.DeveloperId;
                    if (DeveloperId.HasValue)
                    {

                        _developer = await _DeveloperService.GetDevelopersById(DeveloperId.Value);

                        if (_developer != null) {
                            _role = await _RoleService.GetRoleById(_developer.RoleId);
                        }
                    }

                }
                else
                {
                    DeveloperId = null; // No hay sesión activa
                }

                _dataLoaded = true; // Marcar como datos cargados
                StateHasChanged(); // Actualizar el componente
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching active session: {ex.Message}");
                DeveloperId = null;
            }

        }
    }
}


